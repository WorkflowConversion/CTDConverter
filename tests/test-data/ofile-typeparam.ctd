<?xml version="1.0" encoding="UTF-8"?>
<tool ctdVersion="1.7" version="2.3.0" name="'$__tool_directory__/mock.py' ofile-typeparam.ctd" docurl="http://docs.are/unavailable.html" category="Test" >
<description><![CDATA[Outut File parameter tests-typeparam]]></description>
<manual><![CDATA[Output File parameter tests-typeparam.]]></manual>
<PARAMETERS version="1.6.2" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/OpenMS/OpenMS/develop/share/OpenMS/SCHEMAS/Param_1_6_2.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <NODE name="OutFileTest-typeparam" description="Out File test-typeparam.">
    <ITEM name="version" value="2.3.0" type="string" description="Version of the tool that generated this parameters file." required="false" advanced="true" />
	<NODE name="1" description="Instance &apos;1&apos; section for &apos;StringTest&apos;">
	<!-- there is a type parameter for each output that should be used to determine the output type
				 since these type parameters are always optional (IRL, this is changed via hardcoded params) this is also the case here.  

	  formats: should be set as file extension on the CLI and detected in the data node 
      each output should be generated in a separate dir
	  
      the options in the selects should contain the galaxy data types

      For optional outputs an additional bool param should be generated that triggers the output (must be incorporated in the CLI and the filter)
	  -->
      <ITEM name="mandatory_noformat_type" value=""  type="string" description="string" required="true"  advanced="false" restrictions="ext,eyt,ezt"/>
      <ITEM name="mandatory_noformat"      value=""  type="output-file" description="output file" required="true"  advanced="false"/>
      <ITEM name="optional_noformat_type"  value=""  type="string" description="string" required="true"  advanced="false" restrictions="ext,eyt,ezt"/>
      <ITEM name="optional_noformat"       value=""  type="output-file" description="output file" required="false" advanced="false"/>

      <ITEM name="mandatory_multformat_type" value=""  type="string" description="string" required="true"  advanced="false" restrictions="ext,eyt,ezt"/>
	  <ITEM name="mandatory_multformat"      value=""  type="output-file" description="output file" required="true"  advanced="false" supported_formats="*.ext,*.eyt,*.ezt"/>
      <ITEM name="optional_multformat_type"  value=""  type="string" description="string" required="true"  advanced="false" restrictions="ext,eyt,ezt"/>
      <ITEM name="optional_multformat"       value=""  type="output-file" description="output file" required="false" advanced="false" supported_formats="*.ext,*.eyt,*.ezt"/>

      <!-- advanced (did not find a case of a list, or with a default) -->
      <ITEM name="mandatory_noformat_adv_type" value=""  type="string" description="string" required="true"  advanced="true" restrictions="ext,eyt,ezt"/>
      <ITEM name="mandatory_noformat_adv"      value="" type="output-file" description="output file" required="true"  advanced="true"/>
      <ITEM name="optional_noformat_adv_type"  value=""  type="string" description="string" required="true"  advanced="true" restrictions="ext,eyt,ezt"/>
      <ITEM name="optional_noformat_adv"       value="" type="output-file" description="output file" required="false" advanced="true"/>


      <ITEM name="mandatory_multformat_adv_type" value=""  type="string" description="string" required="true"  advanced="true" restrictions="ext,eyt,ezt"/>
	  <ITEM name="mandatory_multformat_adv"      value="" type="output-file" description="output file" required="true"  advanced="true" supported_formats="*.ext,*.eyt,*.ezt"/>
      <ITEM name="optional_multformat_adv_type"  value=""  type="string" description="string" required="true"  advanced="true" restrictions="ext,eyt,ezt"/>
      <ITEM name="optional_multformat_adv"       value="" type="output-file" description="output file" required="false" advanced="true" supported_formats="*.ext,*.eyt,*.ezt"/>

	  <!-- some decoy inputs that should not be used to determine the format of the outputs -->
      <ITEM name="decoy_input_noformat"   value="" type="input-file" description="input file" required="true"  advanced="false" />
      <ITEM name="decoy_input_oneformat"  value="" type="input-file" description="input file" required="true"  advanced="false" supported_formats="*.ext"/>
      <ITEM name="decoy_input_multformat" value="" type="input-file" description="input file" required="true"  advanced="false" supported_formats="*.ext,*.eyt,*.ezt"/>
	</NODE>
  </NODE>
</PARAMETERS>
</tool>
