<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Test]-->
<tool id="echo_MultoutFileTest" name="echo MultoutFileTest" version="2.3.0">
  <description>multiple Output File parameter tests</description>
  <macros>
    <token name="@EXECUTABLE@">echo MultoutFileTest</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command><![CDATA[
#import re
mkdir param_out_mandatory_mandatoryinput && 
mkdir param_out_optional_mandatoryinput && 
mkdir param_out_mandatory_optionalinput && 
mkdir param_out_optional_optionalinput && 
${ ' && '.join([ "ln -s '%s' '%s.%s'" % (_, re.sub('[^\w\-_.]', '_', _.element_identifier), _.ext) for _ in $param_inp_mandatory_mandatoryinput if _ ]) } && 
${ ' && '.join([ "ln -s '%s' '%s.%s'" % (_, re.sub('[^\w\-_.]', '_', _.element_identifier), _.ext) for _ in $param_inp_optional_mandatoryinput if _ ]) } && 
${ ' && '.join([ "ln -s '%s' '%s.%s'" % (_, re.sub('[^\w\-_.]', '_', _.element_identifier), _.ext) for _ in $param_inp_mandatory_optionalinput if _ ]) } && 
${ ' && '.join([ "ln -s '%s' '%s.%s'" % (_, re.sub('[^\w\-_.]', '_', _.element_identifier), _.ext) for _ in $param_inp_optional_optionalinput if _ ]) } && 
@EXECUTABLE@

-mandatory_mandatoryinput ${' '.join(["'param_out_mandatory_mandatoryinput/%s.%s'"%(re.sub('[^\w\-_.]', '_', _.element_identifier),_.ext) for _ in $param_inp_mandatory_mandatoryinput if _ ])}
#if str($param_optional_mandatoryinput):
  -optional_mandatoryinput ${' '.join(["'param_out_optional_mandatoryinput/%s.%s'"%(re.sub('[^\w\-_.]', '_', _.element_identifier),_.ext) for _ in $param_inp_optional_mandatoryinput if _ ])}
#end if
-mandatory_optionalinput ${' '.join(["'param_out_mandatory_optionalinput/%s.%s'"%(re.sub('[^\w\-_.]', '_', _.element_identifier),_.ext) for _ in $param_inp_mandatory_optionalinput if _ ])}
#if str($param_optional_optionalinput):
  -optional_optionalinput ${' '.join(["'param_out_optional_optionalinput/%s.%s'"%(re.sub('[^\w\-_.]', '_', _.element_identifier),_.ext) for _ in $param_inp_optional_optionalinput if _ ])}
#end if
-inp_mandatory_mandatoryinput ${' '.join(["'%s.%s'"%(re.sub('[^\w\-_.]', '_', _.element_identifier),_.ext) for _ in $param_inp_mandatory_mandatoryinput if _ ])}
-inp_optional_mandatoryinput ${' '.join(["'%s.%s'"%(re.sub('[^\w\-_.]', '_', _.element_identifier),_.ext) for _ in $param_inp_optional_mandatoryinput if _ ])}
-inp_mandatory_optionalinput ${' '.join(["'%s.%s'"%(re.sub('[^\w\-_.]', '_', _.element_identifier),_.ext) for _ in $param_inp_mandatory_optionalinput if _ ])}
-inp_optional_optionalinput ${' '.join(["'%s.%s'"%(re.sub('[^\w\-_.]', '_', _.element_identifier),_.ext) for _ in $param_inp_optional_optionalinput if _ ])}
]]></command>
  <inputs>
    <param name="param_optional_mandatoryinput" argument="-optional_mandatoryinput" type="boolean" optional="true" truevalue="-optional_mandatoryinput" falsevalue="" checked="false" label="generate output optional_mandatoryinput (output file)" help=""/>
    <param name="param_optional_optionalinput" argument="-optional_optionalinput" type="boolean" optional="true" truevalue="-optional_optionalinput" falsevalue="" checked="false" label="generate output optional_optionalinput (output file)" help=""/>
    <param name="param_inp_mandatory_mandatoryinput" argument="-inp_mandatory_mandatoryinput" type="data" format="txt" multiple="true" optional="false" label="input file" help=""/>
    <param name="param_inp_optional_mandatoryinput" argument="-inp_optional_mandatoryinput" type="data" format="txt" multiple="true" optional="false" label="input file" help=""/>
    <param name="param_inp_mandatory_optionalinput" argument="-inp_mandatory_optionalinput" type="data" format="tabular,txt" multiple="true" optional="true" label="input file" help=""/>
    <param name="param_inp_optional_optionalinput" argument="-inp_optional_optionalinput" type="data" format="tabular,txt" multiple="true" optional="true" label="input file" help=""/>
  </inputs>
  <outputs>
    <collection type="list" name="param_out_mandatory_mandatoryinput" label="${tool.name} on ${on_string}: mandatory_mandatoryinput">
      <discover_datasets pattern="__name_and_ext__" directory="param_out_mandatory_mandatoryinput"/>
    </collection>
    <collection type="list" name="param_out_optional_mandatoryinput" label="${tool.name} on ${on_string}: optional_mandatoryinput">
      <discover_datasets pattern="__name_and_ext__" directory="param_out_optional_mandatoryinput"/>
      <filter>param_optional_mandatoryinput</filter>
    </collection>
    <collection type="list" name="param_out_mandatory_optionalinput" label="${tool.name} on ${on_string}: mandatory_optionalinput">
      <discover_datasets pattern="__name_and_ext__" directory="param_out_mandatory_optionalinput"/>
    </collection>
    <collection type="list" name="param_out_optional_optionalinput" label="${tool.name} on ${on_string}: optional_optionalinput">
      <discover_datasets pattern="__name_and_ext__" directory="param_out_optional_optionalinput"/>
      <filter>param_optional_optionalinput</filter>
    </collection>
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <param name="param_optional_mandatoryinput" value="false"/>
      <param name="param_optional_optionalinput" value="false"/>
      <param name="param_inp_mandatory_mandatoryinput" ftype="txt" value="test.ext,test2.ext"/>
      <param name="param_inp_optional_mandatoryinput" ftype="txt" value="test.ext,test2.ext"/>
      <output_collection name="param_out_mandatory_mandatoryinput"/>
      <output_collection name="param_out_mandatory_optionalinput"/>
    </test>
  </tests>
  <help><![CDATA[Multiple Output File parameter tests.


For more information, visit http://docs.are/unavailable.html]]></help>
  <expand macro="references"/>
</tool>
