<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Test]-->
<tool id="'$__tool_directory__/mock.py'_ofile-mult-typeparam.ctd" name="'$__tool_directory__/mock.py' ofile-mult-typeparam.ctd" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>multiple Output File parameter tests</description>
  <macros>
    <token name="@EXECUTABLE@">'$__tool_directory__/mock.py' ofile-mult-typeparam.ctd</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re
mkdir param_out_mandatory_mandatoryinput &&
mkdir param_out_mandatory_optionalinput &&
mkdir param_inp_optional_mandatoryinput &&
${ ' '.join([ "ln -s '%s' 'param_inp_optional_mandatoryinput/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier),$gxy2omsext(_.ext)) for _ in $param_inp_optional_mandatoryinput if _ ]) }
#if $param_inp_mandatory_optionalinput:
  mkdir param_inp_mandatory_optionalinput &&
  ${ ' '.join([ "ln -s '%s' 'param_inp_mandatory_optionalinput/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier),$gxy2omsext(_.ext)) for _ in $param_inp_mandatory_optionalinput if _ ]) }
#end if
@EXECUTABLE@
-mandatory_mandatoryinput_type
"$param_mandatory_mandatoryinput_type"
-mandatory_mandatoryinput
${' '.join(["'param_out_mandatory_mandatoryinput/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext("tsv")) for _ in $param_inp_optional_mandatoryinput if _ ])}
-mandatory_optionalinput_type
"$param_mandatory_optionalinput_type"
-mandatory_optionalinput
${' '.join(["'param_out_mandatory_optionalinput/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), param_mandatory_optionalinput_type) for _ in $param_inp_mandatory_optionalinput if _ ])}
-inp_optional_mandatoryinput
${' '.join(["'param_inp_optional_mandatoryinput/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier),$gxy2omsext(_.ext)) for _ in $param_inp_optional_mandatoryinput if _ ])}
#if $param_inp_mandatory_optionalinput:
  -inp_mandatory_optionalinput
  ${' '.join(["'param_inp_mandatory_optionalinput/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier),$gxy2omsext(_.ext)) for _ in $param_inp_mandatory_optionalinput if _ ])}
#end if
${' '.join(["&& mv -n 'param_out_mandatory_mandatoryinput/%(id)s.%(gext)s' 'param_out_mandatory_mandatoryinput/%(id)s'"%{"id": re.sub('[^\w\-_]', '_', _.element_identifier), "gext": $gxy2omsext("tsv")} for _ in $param_inp_optional_mandatoryinput if _ ])}
${' '.join(["&& mv -n 'param_out_mandatory_optionalinput/%(id)s.%(omsext)s' 'param_out_mandatory_optionalinput/%(id)s.%(gext)s'"%{"id": re.sub('[^\w\-_]', '_', _.element_identifier), "omsext":param_mandatory_optionalinput_type, "gext": oms2gxyext("param_mandatory_optionalinput_type")} for _ in $param_inp_mandatory_optionalinput if _ ])}]]></command>
  <inputs>
    <param name="param_mandatory_mandatoryinput_type" argument="-mandatory_mandatoryinput_type" display="radio" type="select" optional="false" value="" label="string" help="">
      <option value="ewt">ewt</option>
      <option value="ext">ext</option>
      <expand macro="list_string_san"/>
    </param>
    <param name="param_mandatory_optionalinput_type" argument="-mandatory_optionalinput_type" display="radio" type="select" optional="false" value="" label="string" help="">
      <option value="ewt">ewt</option>
      <option value="ext">ext</option>
      <option value="eyt">eyt</option>
      <expand macro="list_string_san"/>
    </param>
    <param name="param_inp_optional_mandatoryinput" argument="-inp_optional_mandatoryinput" type="data" format="tsv" multiple="true" optional="false" label="input file" help=""/>
    <param name="param_inp_mandatory_optionalinput" argument="-inp_mandatory_optionalinput" type="data" format="tsv,tabular" multiple="true" optional="true" label="input file" help=""/>
  </inputs>
  <outputs>
    <collection type="list" name="param_out_mandatory_mandatoryinput" label="${tool.name} on ${on_string}: mandatory_mandatoryinput">
      <discover_datasets directory="param_out_mandatory_mandatoryinput" format="tsv" pattern="__name__"/>
    </collection>
    <collection type="list" name="param_out_mandatory_optionalinput" label="${tool.name} on ${on_string}: mandatory_optionalinput">
      <discover_datasets directory="param_out_mandatory_optionalinput" pattern="__name_and_ext__"/>
    </collection>
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <param name="param_mandatory_mandatoryinput_type" value="ewt"/>
      <param name="param_mandatory_optionalinput_type" value="ewt"/>
      <param name="param_inp_optional_mandatoryinput" ftype="tsv" value="0test.ext,0test2.ext"/>
      <output_collection name="param_out_mandatory_mandatoryinput"/>
      <output_collection name="param_out_mandatory_optionalinput"/>
    </test>
  </tests>
  <help><![CDATA[Multiple Output File parameter tests.


For more information, visit http://docs.are/unavailable.html]]></help>
  <expand macro="references"/>
</tool>
