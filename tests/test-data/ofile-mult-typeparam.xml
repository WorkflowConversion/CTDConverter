<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTDConverter.-->
<!--Proposed Tool Section: [Test]-->
<tool id="ofile-mult-typeparam" name="ofile-mult-typeparam" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
  <description>multiple Output File parameter tests</description>
  <macros>
    <token name="@EXECUTABLE@">ofile-mult-typeparam</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <expand macro="stdio"/>
  <command detect_errors="exit_code"><![CDATA[@QUOTE_FOO@
@EXT_FOO@
#import re

## Preprocessing
mkdir mandatory_mandatoryinput &&
mkdir mandatory_optionalinput &&
#if $inp_optional_mandatoryinput:
  mkdir inp_optional_mandatoryinput &&
  ${ ' '.join(["ln -s '%s' 'inp_optional_mandatoryinput/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $inp_optional_mandatoryinput if _]) }
#end if
#if $inp_mandatory_optionalinput:
  mkdir inp_mandatory_optionalinput &&
  ${ ' '.join(["ln -s '%s' 'inp_mandatory_optionalinput/%s.%s' &&" % (_, re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $inp_mandatory_optionalinput if _]) }
#end if

## Main program call
@EXECUTABLE@ -write_ctd ./ &&
python '$__tool_directory__/fill_ctd.py' '@EXECUTABLE@.ctd' '$args_json' &&
@EXECUTABLE@ -ini @EXECUTABLE@.ctd
-mandatory_mandatoryinput
${' '.join(["'mandatory_mandatoryinput/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext("tsv")) for _ in $inp_optional_mandatoryinput if _])}
-mandatory_optionalinput
${' '.join(["'mandatory_optionalinput/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), mandatory_optionalinput_type) for _ in $inp_mandatory_optionalinput if _])}
#if $inp_optional_mandatoryinput:
  -inp_optional_mandatoryinput
  ${' '.join(["'inp_optional_mandatoryinput/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $inp_optional_mandatoryinput if _])}
#end if
#if $inp_mandatory_optionalinput:
  -inp_mandatory_optionalinput
  ${' '.join(["'inp_mandatory_optionalinput/%s.%s'"%(re.sub('[^\w\-_]', '_', _.element_identifier), $gxy2omsext(_.ext)) for _ in $inp_mandatory_optionalinput if _])}
#end if

## Postprocessing
${' '.join(["&& mv -n 'mandatory_mandatoryinput/%(id)s.%(gext)s' 'mandatory_mandatoryinput/%(id)s'"%{"id": re.sub('[^\w\-_]', '_', _.element_identifier), "gext": $gxy2omsext("tsv")} for _ in $inp_optional_mandatoryinput if _])}
${' '.join(["&& mv -n 'mandatory_optionalinput/%(id)s.%(omsext)s' 'mandatory_optionalinput/%(id)s.%(gext)s'"%{"id": re.sub('[^\w\-_]', '_', _.element_identifier), "omsext":mandatory_optionalinput_type, "gext": oms2gxyext("mandatory_optionalinput_type")} for _ in $inp_mandatory_optionalinput if _])}]]></command>
  <configfiles>
    <inputs name="args_json" data_style="paths"/>
  </configfiles>
  <inputs>
    <param name="mandatory_mandatoryinput_type" argument="-mandatory_mandatoryinput_type" display="radio" type="select" optional="false" label="string" help="">
      <option value="ewt" selected="false">tsv</option>
      <option value="ext" selected="false">tsv</option>
      <expand macro="list_string_san"/>
    </param>
    <param name="mandatory_optionalinput_type" argument="-mandatory_optionalinput_type" display="radio" type="select" optional="false" label="string" help="">
      <option value="ewt" selected="false">tsv</option>
      <option value="ext" selected="false">tsv</option>
      <option value="eyt" selected="false">tabular</option>
      <expand macro="list_string_san"/>
    </param>
    <param name="inp_optional_mandatoryinput" argument="-inp_optional_mandatoryinput" type="data" format="tsv" multiple="true" optional="true" label="input file" help=" select tsv data sets(s)"/>
    <param name="inp_mandatory_optionalinput" argument="-inp_mandatory_optionalinput" type="data" format="tabular,tsv" multiple="true" optional="true" value="" label="input file" help=" select tabular,tsv data sets(s)"/>
  </inputs>
  <outputs>
    <collection type="list" name="mandatory_mandatoryinput" label="${tool.name} on ${on_string}: mandatory_mandatoryinput">
      <discover_datasets directory="mandatory_mandatoryinput" format="tsv" pattern="__name__"/>
    </collection>
    <collection type="list" name="mandatory_optionalinput" label="${tool.name} on ${on_string}: mandatory_optionalinput">
      <discover_datasets directory="mandatory_optionalinput" pattern="__name_and_ext__"/>
    </collection>
  </outputs>
  <tests>
    <test expect_num_outputs="2">
      <param name="mandatory_mandatoryinput_type" value="ewt"/>
      <param name="mandatory_optionalinput_type" value="ewt"/>
      <output_collection name="mandatory_mandatoryinput"/>
      <output_collection name="mandatory_optionalinput"/>
    </test>
  </tests>
  <help><![CDATA[Multiple Output File parameter tests.


For more information, visit http://www.openms.de/unavailable.html]]></help>
  <expand macro="references"/>
</tool>
